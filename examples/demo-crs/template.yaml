apiVersion: scaffolder.backstage.io/v1beta3
# https://backstage.io/docs/features/software-catalog/descriptor-format#kind-template
kind: Template
metadata:
  name: demo-crs
  title: Deploy Custom Resources from a Repository
  description: IBM IDP Demo
spec:
  owner: user:guest
  type: service

  # These parameters are used to generate the input form in the frontend, and are
  # used to gather input data for the execution of the template.
  parameters:
    - title: Fill in some steps
      required:
        - repoURL
      properties:
        repoURL:
          title: Target repo SSH Clone URL
          type: string
          description: The SSH Clone URL of the repo containing your Custom Resources
          ui:autofocus: true
          ui:options:
            rows: 5
    - title: Developer Name
      required:
        - developerName
      properties:
        developerName:
          title: Developer Name
          type: string
          description: The developer name to associate resources with
          ui:autofocus: true
          ui:options:
            rows: 5
    - title: Choose a Target Cloud Environment
      required:
        - targetEnv
      properties:
        targetEnv:
          title: Target Environment
          type: string
          enum: ["AWS", "Azure"]
    - title: Name your deployed application
      required:
        - applicationName
      properties:
        applicationName:
          title: Application Name
          type: string
          description: Unique name of your application
          ui:autofocus: true
          ui:options:
            rows: 5
      
  # These steps are executed in the scaffolder backend, using data that we gathered
  # via the parameters above.
  steps:
    # Each step executes an action, in this case one templates files into the working directory.
    - id: trigger_build
      name: Trigger Build Pipeline
      action: ibm:call-cr-pipeline
      input:
        repoURL:  ${{ parameters.repoURL }}
        developerName:  ${{ parameters.developerName }}
        targetEnv: ${{ parameters.targetEnv }}
        applicationName: ${{ parameters.applicationName }}
  #   - id: register
  #     name: Register
  #     action: catalog:register
  #     input:
  #       repoContentsUrl: https://github.com/ce-apac-project-idp/developer-repo/blob/main
  #       catalogInfoPath: '/catalog-info.yaml'
  # output:
  #   links:
  #     - title: Repository
  #       url: https://github.com/ce-apac-project-idp/developer-repo
  #     - title: Open in catalog
  #       icon: catalog
  #       entityRef: ${{ steps.register.output.entityRef }}

  # Outputs are displayed to the user after a successful execution of the template.
